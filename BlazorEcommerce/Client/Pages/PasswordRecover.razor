@page "/passwordRecover"
@using Microsoft.AspNetCore.WebUtilities
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ICartService CartService
@inject IJSRuntime JsRuntime
<br />
<div class="container">
    <h3 class="insta">Recupere su contraseña</h3>
    <EditForm Model="forgotpassword" OnValidSubmit="HandleRecoverPassword">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="email">Ingrese su Email</label>
            <InputText id="email" @bind-Value="forgotpassword.Email" class="form-control" />
            <ValidationMessage For="@(() => forgotpassword.Email)" />
        </div>
        <button type="submit" class="button">Aceptar</button>
    </EditForm>
    @if(IsTaskRunning == true)
    {
        <br />
        <MudProgressCircular Color="Color.Info" Indeterminate="true" />
    }
    else
    {
        
    }
    
    <div class="text-danger">
        <span>@errorMessage</span>
    </div>
    <div class="text-success">
        <span>@successMessage</span>
    </div>
</div>
<br />

@code {
    private UserLogin user = new UserLogin();
    private ForgotPassword forgotpassword = new ForgotPassword();

    //mensajes de errores y success
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;

    private string isDisabled = string.Empty;

    private string returnUrl = string.Empty;

    bool IsTaskRunning = false;  


    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }

    //funcion para verificar correo y enviar link
    private async Task HandleRecoverPassword()
    {
        IsTaskRunning = true;
        errorMessage = "";
        successMessage = "";
        var result = await AuthService.RecoverPassword(forgotpassword);
        if (result.Success)
        {  
            successMessage = result.Message + "se ha enviado un link de accesso a su correo";
            await JsRuntime.InvokeVoidAsync("alert", result.Message + ". Se ha enviado a su email un link de acceso"); // Alert
            IsTaskRunning = false;
        }
        else
        {
            IsTaskRunning = false;
            errorMessage = result.Message;
        }
    }

}
