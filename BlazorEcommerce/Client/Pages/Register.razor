@page "/register"
@inject IAuthService AuthService

<PageTitle>Crear Usuario</PageTitle>

<h3>Crear un Usuario</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Ingrese un Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Contraseña</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirme Contraseña</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    @*<MudSelect T="string" Label="Rol" AnchorOrigin="Origin.BottomCenter">
        @foreach (var roles in rolesRange)
        {
        <MudSelectItem Value="@roles" />
        }     
       
    </MudSelect>*@
    <div class="mb-0">
        <label for="category">Rol</label>
        <InputSelect id="category" @bind-Value="user.Role" class="form-control">
            @foreach (var rolesNombre in rolesRange)
            {
                <option value="@rolesNombre">@rolesNombre</option>
            }
        </InputSelect>
    </div>
    @*<div class="mb-3">
        <label for="confirmPassword">Ingrese un Rol</label>
        <InputText id="confirmPassword" @bind-Value="user.Role" class="form-control" />
        <ValidationMessage For="@(() => user.Role)" />
    </div>*@
    <button type="submit" class="btn btn-primary">Registrar</button>
    <div class="@messageCssClass">
        <span>@message</span>
    </div>
</EditForm>

@code {
    
    static string[] roles = { "Municipal", "Admin" };
    List<string> rolesRange = new List<string>(roles);

    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }
    async Task ObtenerRoles()
    {
        foreach (var roles in rolesRange)
        {
            
        }
    }
}
